{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","Footer.jsx","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","auth","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Footer","currentYear","Date","getFullYear","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.f368c37f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './NavLinks.css';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst NavLinks = props => {\r\n    const auth=useContext(AuthContext);\r\n\r\n    return <ul className=\"nav-links\">\r\n        <li>\r\n            <NavLink to=\"/\" exact>All Users</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n        </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to=\"/places/new\">ADD Places</NavLink>\r\n        </li>\r\n        )}\r\n        { !auth.isLoggedIn && (\r\n        <li>\r\n            <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <Button onClick={auth.logout}>LOGOUT</Button>\r\n            </li>\r\n        )}\r\n    </ul> \r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React from \"react\";\r\nimport './Footer.css';\r\n\r\nfunction Footer(){\r\n   const currentYear = new Date().getFullYear();\r\n   return (<footer>\r\n       <p>\r\n       K10 Copyright © {currentYear} \r\n   </p>\r\n   </footer>\r\n   );\r\n}\r\n\r\nexport default Footer;","import React,{ Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\nimport Footer from './Footer';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  \n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main><Suspense fallback={<div className=\"center\">\n          <LoadingSpinner/>\n        </div>}>{routes}</Suspense></main>\n      </Router>\n      <Footer />\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}